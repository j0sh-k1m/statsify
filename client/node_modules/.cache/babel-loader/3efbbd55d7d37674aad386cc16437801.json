{"ast":null,"code":"var _jsxFileName = \"/Users/joshkim/Documents/Vs Code/statsify/client/src/components/pages/TopTracks/TopTracksList.js\";\nimport React from \"react\";\nimport TrackItem from \"./TrackItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TopTracksList = props => {\n  const checkKeys = array => {\n    const dict = {};\n    array.forEach(element => {\n      if (!(element in dict)) {\n        dict[element.external_ids.isrc] = element.external_ids.isrc;\n      } else {\n        dict[Math.random()] = element.external_ids.isrc;\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: props.topTracks.items.map((track, index) => /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: /*#__PURE__*/_jsxDEV(TrackItem, {\n        title: track.name,\n        artists: track.artists,\n        picture: track.album.images,\n        link: track.external_urls.spotify,\n        rank: index + 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this)\n    }, track.external_ids.isrc, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\n_c = TopTracksList;\nexport default TopTracksList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TopTracksList\");","map":{"version":3,"names":["React","TrackItem","TopTracksList","props","checkKeys","array","dict","forEach","element","external_ids","isrc","Math","random","topTracks","items","map","track","index","name","artists","album","images","external_urls","spotify"],"sources":["/Users/joshkim/Documents/Vs Code/statsify/client/src/components/pages/TopTracks/TopTracksList.js"],"sourcesContent":["import React from \"react\";\nimport TrackItem from \"./TrackItem\";\n\nconst TopTracksList = (props) => {\n\n    const checkKeys = (array) => {\n        const dict = {}; \n        array.forEach(element => {\n            if (!(element in dict)) {\n                dict[element.external_ids.isrc] = element.external_ids.isrc; \n            } else {\n                dict[Math.random()] = element.external_ids.isrc; \n            }\n        });\n    };\n\n  return (\n    <div>\n      {/* Render a list of objects and pass title and artists to TrackItem component */}\n      {props.topTracks.items.map((track, index) => (\n        <ul key={track.external_ids.isrc}>\n          <TrackItem\n            title={track.name}\n            artists={track.artists}\n            picture={track.album.images}\n            link={track.external_urls.spotify}\n            rank={index + 1}\n          />\n        </ul>\n      ))}\n    </div>\n  );\n};\n\nexport default TopTracksList;\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;EAE7B,MAAMC,SAAS,GAAIC,KAAD,IAAW;IACzB,MAAMC,IAAI,GAAG,EAAb;IACAD,KAAK,CAACE,OAAN,CAAcC,OAAO,IAAI;MACrB,IAAI,EAAEA,OAAO,IAAIF,IAAb,CAAJ,EAAwB;QACpBA,IAAI,CAACE,OAAO,CAACC,YAAR,CAAqBC,IAAtB,CAAJ,GAAkCF,OAAO,CAACC,YAAR,CAAqBC,IAAvD;MACH,CAFD,MAEO;QACHJ,IAAI,CAACK,IAAI,CAACC,MAAL,EAAD,CAAJ,GAAsBJ,OAAO,CAACC,YAAR,CAAqBC,IAA3C;MACH;IACJ,CAND;EAOH,CATD;;EAWF,oBACE;IAAA,UAEGP,KAAK,CAACU,SAAN,CAAgBC,KAAhB,CAAsBC,GAAtB,CAA0B,CAACC,KAAD,EAAQC,KAAR,kBACzB;MAAA,uBACE,QAAC,SAAD;QACE,KAAK,EAAED,KAAK,CAACE,IADf;QAEE,OAAO,EAAEF,KAAK,CAACG,OAFjB;QAGE,OAAO,EAAEH,KAAK,CAACI,KAAN,CAAYC,MAHvB;QAIE,IAAI,EAAEL,KAAK,CAACM,aAAN,CAAoBC,OAJ5B;QAKE,IAAI,EAAEN,KAAK,GAAG;MALhB;QAAA;QAAA;QAAA;MAAA;IADF,GAASD,KAAK,CAACP,YAAN,CAAmBC,IAA5B;MAAA;MAAA;MAAA;IAAA,QADD;EAFH;IAAA;IAAA;IAAA;EAAA,QADF;AAgBD,CA7BD;;KAAMR,a;AA+BN,eAAeA,aAAf"},"metadata":{},"sourceType":"module"}